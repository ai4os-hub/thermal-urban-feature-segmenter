{
  format_version = 2
  N = 4 #Number of input channels=3 or 4
  task_data_filters = []
  task_result_filters = []
  model_class_path = "segmentation_models.Unet"
  workflows = [
    {
      id = "scatter_and_gather"
      path = "nvflare.app_common.workflows.scatter_and_gather.ScatterAndGather"
      args {
        min_clients = 2
        num_rounds = 4
        start_round = 0
        wait_time_after_min_received = 0
        aggregator_id = "aggregator"
        persistor_id = "persistor"
        shareable_generator_id = "shareable_generator"
        train_task_name = "train"
        train_timeout = 0
      }
    }
  ]
  components = [
    {
      id = "persistor"
      path = "model_persistor.TFModelPersistor"
      args {
        N=${N}
        model {
          path = "segmentation_models.Unet"
          args={
            backbone_name=resnet152, 
            encoder_weights=imagenet,
            classes=9,
            input_shape=[512,640,3]
          }
        }
        save_name = "tf_model.ckpt"
      }
    }
    {
      id = "shareable_generator"
      path = "nvflare.app_common.shareablegenerators.full_model_shareable_generator.FullModelShareableGenerator"
      args {}
    }
    {
      id = "aggregator"
      path = "nvflare.app_common.aggregators.intime_accumulate_model_aggregator.InTimeAccumulateWeightedAggregator"
      args {
        expected_data_kind = "WEIGHT_DIFF"
      }
    }
    {
      id = "mlflow_receiver_with_tracking_uri"
      path = "mlflow_receiver.MLflowReceiver"
      args ={ 
        #tracking_uri="https://mlflow.cloud.ai4eosc.eu/",
        #experiment_name="NVFlare_Simulation_HoreKa
        kwargs={experiment_name="NVFlare_HoreKa_Haicore_2",
          run_name= "Thermal urban feature semantic segmentation", 
          "experiment_tags": {
            "mlflow.note.content": "## **Thermal urban feature semantic segmentation**"
          },
          "run_tags": {
            "mlflow.note.content": "## **Thermal urban feature semantic segmentation using the NVFlare simulator** \n### Example of using **[NVIDIA FLARE](https://nvflare.readthedocs.io/en/main/index.html)** to train a semantic segmentation model (UNet) and [Tensorflow](https://www.tensorflow.org/) as the deep learning training framework."
          }
        }
      }
    }
  ]
}
