{
  format_version = 2
  N = 4 #Number of input channels=3 or 4
   workflows = [
    {
      id = "fedopt"
      path = "nvflare.app_opt.tf.fedopt_ctl.FedOpt"
      args {
        num_clients=2
        persistor_id = "persistor"
        num_rounds = 4
        optimizer_args {
            path =  "tensorflow.keras.optimizers.SGD",
            args {
                 learning_rate =  1.0 ,
                 momentum = 0.6,
         
            },
            config_type = "dict"
          },
          lr_scheduler_args {
            path = "tensorflow.keras.optimizers.schedules.CosineDecay",
            args {
              initial_learning_rate =  1.0
              decay_steps = 50,
              alpha = 0.9
            },
            config_type = "dict"
          }
      }
    }
  ]
  components = [
    {
      id = "persistor"
      path =  "persistor.TFModelPersistor"
      args {
        N=${N}
        model {
          path = "segmentation_models.Unet"
          args={
            backbone_name=resnet152, 
            encoder_weights=imagenet,
            classes=9,
            input_shape=[512,640,3],
           }
        }
       # save_name = "tf_model.ckpt"
      }
    }

    {
      id = "mlflow_receiver_with_tracking_uri"
      path = "mlflow_receiver.MLflowReceiver"
      args ={ 
        #tracking_uri="https://mlflow.cloud.ai4eosc.eu/",
        #experiment_name="NVFlare_Simulation_HoreKa
        kwargs={experiment_name="NVFlare_HoreKa_Haicore_2",
          run_name= "Thermal urban feature semantic segmentation", 
          "experiment_tags": {
            "mlflow.note.content": "## **Thermal urban feature semantic segmentation**"
          },
          "run_tags": {
            "mlflow.note.content": "## **Thermal urban feature semantic segmentation using the NVFlare simulator** \n### Example of using **[NVIDIA FLARE](https://nvflare.readthedocs.io/en/main/index.html)** to train a semantic segmentation model (UNet) and [Tensorflow](https://www.tensorflow.org/) as the deep learning training framework."
          }
        }
      }
    }
  ]
}
